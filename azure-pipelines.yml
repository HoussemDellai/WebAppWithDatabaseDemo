pr:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
  branches:
    include:
      - dev
  paths:
    exclude:
      - docs/*
      - README.md

trigger:
 branches:
   include:
     - master
 paths:
   exclude:
     - docs/*
     - README.md
     - azure-pipelines-ci.yml
     - azure-pipelines-ci-cd.yml

stages:
- stage: Build_Stage
  displayName: Build Stage
  jobs:
  - job: WebApp
    displayName: Build Web App Job
    pool:
      name: Hosted Windows 2019 with VS2019 
      vmImage: 'windows-2019'
      demands: java
    variables:
      BuildConfiguration: release
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/WebApp.csproj'

    - powershell: |
       Write-Host "Hello World"
       $paths = Get-ChildItem -include *.csproj -Recurse
       foreach($pathobject in $paths) 
       {
           $path = $pathobject.fullname
           $doc = New-Object System.Xml.XmlDocument
           $doc.Load($path)
           $child = $doc.CreateElement("ProjectGuid")
           $child.InnerText = [guid]::NewGuid().ToString().ToUpper()
           $node = $doc.SelectSingleNode("//Project/PropertyGroup")
           $node.AppendChild($child)
           $doc.Save($path)
       }
      workingDirectory: WebApp
      displayName: 'PS : Add Project GUID'
    - task: SonarCloudPrepare@1
      displayName: Prepare analysis on SonarCloud
      inputs:
        SonarCloud: SonarCloud
        organization: houssemdellai
        projectKey: WebAppWithDatabaseDemo

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/WebApp.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*UnitTest*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True

    - task: SonarCloudAnalyze@1
      displayName: Run Code Analysis

    - task: SonarCloudPublish@1
      displayName: Publish Quality Gate Result

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact (WebApp.zip)
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: drop

  - job: Database
    displayName: Build Database Job
    pool:
      name: Hosted Windows 2019 with VS2019 
      vmImage: 'windows-2019'
      demands: msbuild

    steps:
    - task: MSBuild@1
      displayName: Build solution WebApp.Database.sqlproj
      inputs:
        solution: WebApp.Database/WebApp.Database.sqlproj
        msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact (Dacpac)
      inputs:
        ArtifactName: dacpac

  - job: Selenium
    displayName: Build UI Tests Job
    pool:
      name: Hosted Windows 2019 with VS2019 
      vmImage: 'windows-2019'
      demands: msbuild

    steps:
    - task: NuGetToolInstaller@0
      displayName: Use NuGet 4.3.0

    - task: NuGetCommand@2
      displayName: NuGet restore
      inputs:
        restoreSolution: WebAppWithDatabase.sln

    - task: MSBuild@1
      displayName: Build project SeleniumUiTests.csproj
      inputs:
        solution: SeleniumUiTests/SeleniumUiTests.csproj
        msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: UI-Test'
      inputs:
        ArtifactName: ui-tests

  - job: Infrastructure
    displayName: Publish Infra files Job
    pool:
      name: Hosted Ubuntu 1604
      vmImage: 'ubuntu-16.04'
    steps:
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Terraform'
      inputs:
        PathtoPublish: Terraform
        ArtifactName: terraform
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: ARM templates'
      inputs:
        PathtoPublish: AzureResourceGroupDeployment
        ArtifactName: arm

- stage: Dev_Stage
  displayName: Dev Stage
  dependsOn: Build_Stage
  jobs:
  - job: Dev
    displayName: Deploy to Dev Job
    pool:
      name: Hosted Windows 2019 with VS2019 
      vmImage: 'windows-2019'
    variables:
      Parameters.ConnectedServiceName: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)' # couldn't be referenced
      ResourceGroupName: '$(Prefix)-$(Release.EnvironmentName)-$(UniqueId)-RG'
      Database.Admin: 'houssem'
      Database.Password: '@Aa123456'
      Database.Name: 'EmployeesDB'
      WebAppName: '$(Prefix)-$(Release.EnvironmentName)-$(UniqueId)'
      WebAppNameUrl: 'https://$(WebAppName).azurewebsites.net/'
      SqlServerName: '$(Prefix)-sql-$(Release.EnvironmentName)-$(UniqueId)'
      Prefix: 'tunis'
      Release.EnvironmentName: 'dev'
      UniqueId: '1280' #'$(Build.BuildId)'

    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@0
      displayName: Download Build Artifacts
      inputs:
        artifactName: terraform
        downloadPath: $(System.DefaultWorkingDirectory)

    - task: Terraform@2
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)/terraform/'
        Arguments: 'init'
        InstallTerraform: true
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        ManageState: false

    - task: Terraform@2
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)/terraform/'
        Arguments: 'plan'
        InstallTerraform: true
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        ManageState: false

    - task: Terraform@2
      inputs:
        TemplatePath: '$(System.DefaultWorkingDirectory)/terraform/'
        Arguments: 'apply'
        InstallTerraform: true
        UseAzureSub: true
        ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
        ConnectedServiceNameARM: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        ManageState: false

    - task: AzureResourceGroupDeployment@2
      displayName: Validate ARM template
      enabled: 'false'
      inputs:
        azureSubscription: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/**/arm/WebSiteSQLDatabase.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/**/arm/WebSiteSQLDatabase.parameters.json'
        overrideParameters: '-hostingPlanName "houssemdellai-service-plan" -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'
        deploymentMode: Validation

    - task: AzureResourceGroupDeployment@2
      displayName: Create Or Update Resource Group
      enabled: 'false'
      inputs:
        azureSubscription: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/**/arm/WebSiteSQLDatabase.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/**/arm/WebSiteSQLDatabase.parameters.json'
        overrideParameters: '-hostingPlanName "houssemdellai-service-plan" -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'
        deploymentMode: Complete

    - task: DownloadBuildArtifacts@0    
      displayName: Download WebApp.zip
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        itemPattern: '**/WebApp.zip'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: CmdLine@2
      inputs:
        script: |
          ls $(System.DefaultWorkingDirectory)
    - task: AzureRmWebAppDeployment@3
      displayName: Deploy Web App to Azure App Service
      enabled: 'true'
      inputs:
        azureSubscription: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        appType: 'webApp'
        WebAppName: '$(WebAppName)'
        TakeAppOfflineFlag: true
        JSONFiles: '**/appsettings.json'
        packageForLinux: '$(System.DefaultWorkingDirectory)/drop/WebApp.zip' #'$(System.ArtifactsDirectory)/**/drop/WebApp.zip'



    - task: DownloadBuildArtifacts@0    
      displayName: Download DacPac
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'dacpac'
        itemPattern: '**/*.dacpac'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: SqlAzureDacpacDeployment@1
      displayName: Azure SQL Publish DacPac to SQL Azure
      inputs:
        azureSubscription: 'Microsoft Azure Sponsorship (5a56fb34-f1c5-4669-9412-4592bb81a2cf)'
        ServerName: '$(SqlServerName).database.windows.net,1433'
        DatabaseName: '$(Database.Name)'
        SqlUsername: '$(Database.Admin)'
        SqlPassword: '$(Database.Password)'
        DacpacFile: '$(System.DefaultWorkingDirectory)/dacpac/WebApp.Database.dacpac'

    - task: DownloadBuildArtifacts@0    
      displayName: Download Selenium Tests
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'ui-tests'
        itemPattern: ''
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: VSTest@2
      displayName: Selenium UI Tests
      inputs:
        testSelector: 'testAssemblies'
        searchFolder: '$(System.DefaultWorkingDirectory)/ui-tests'
        runSettingsFile: '$(System.DefaultWorkingDirectory)/ui-tests/.runsettings'
        overrideTestrunParameters: '-webAppUrl $(WebAppNameUrl)'
        testAssemblyVer2: '**\*test*.dll
              !**\*TestAdapter.dll
              !**\obj\**'
        runInParallel: false
        codeCoverageEnabled: false


- stage: Test_Stage
  displayName: Test Stage
  jobs:
  - job:
    displayName: Deploy to Test Job
    steps:
      - task: CmdLine@2
        inputs:
          script: 'ls'
          
- stage: Prod_Stage
  displayName: Prod Stage
  jobs:
  - job:
    displayName: Deploy to Prod Job
    steps:
      - task: CmdLine@2
        inputs:
          script: 'ls'